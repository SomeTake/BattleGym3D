//====================================================================================================================================================================================
//
// シェーダ処理 [shader.h]
// Author : HAL東京 GP11B341-17 80277 染谷武志
//
//====================================================================================================================================================================================
#ifndef _SHADER_H_	//	重複インクルードの防止
#define _SHADER_H_	//	重複インクルードの防止
//====================================================================================================================================================================================
// マクロ定義
//====================================================================================================================================================================================
#define SHADER_FILE ("data/HLSL/shader.hlsl")												//	シェーダのファイル
#define SHADER_TEXTURE_TOON ("data/TEXTURE/Toon.jpg")							//	シェーダのテクスチャ( トゥーン )
#define EFFECT_COMPILE_OPTION (D3DXSHADER_DEBUG | D3DXSHADER_SKIPOPTIMIZATION)	//	エフェクトのコンパイルオプション
#define ENABLE_SHADER (0)														//	シェーダ有効フラグ
//	ピクセルシェーダを使用しない場合は"0"、使用する場合は"1"( さらに、テクニック内のコメントアウトを外すこと )
#define ENABLE_PIXEL_SHADER (0)													//	ピクセルシェーダ有効フラグ
//====================================================================================================================================================================================
// 構造体定義
//====================================================================================================================================================================================
typedef struct
{
	LPD3DXEFFECT Effect;
	LPDIRECT3DTEXTURE9 ToonTexture;
	LPDIRECT3DTEXTURE9 WhiteTexture;
}SHADER;
//====================================================================================================================================================================================
// プロトタイプ宣言
//====================================================================================================================================================================================
HRESULT Initialization_Shader(void);
void Release_Shader(void);
void Draw_Shader(void);
#endif